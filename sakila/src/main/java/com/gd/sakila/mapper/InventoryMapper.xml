<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.InventoryMapper">
	<!-- 재고 삭제 -->
	<delete id="deleteInventory"
			parameterType="int">
		DELETE FROM inventory 
		WHERE inventory_id = #{inventoryId}
	</delete>
	
	<!-- film_id에 따라서 재고 id 가져오기 -> 재고 삭제 시 inventory_id 선택에 필요 -->
	<select id="selectInventoryIdByFilmId"
			parameterType="int"
			resultType="map">
		SELECT 
			inventory_id inventoryId
		FROM inventory 
		WHERE film_id = #{filmId}
	</select>
	
	<!-- 재고 추가 -->
	<insert id="insertInventory" parameterType="map">
		<selectKey keyProperty="inventoryId" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO inventory(
			film_id,
			store_id
		) VALUES (
			#{filmId},
			#{storeId}
		)
	</insert>
	
	<!-- 재고 목록 -->
	<select id="selectInventoryList" parameterType="map" resultType="map">
		SELECT i.store_id storeId, f.title title, COUNT(*) AS totalInventory,
			SUM(NOT inventory_in_stock(i.inventory_id)) AS rental, 
            SUM(inventory_in_stock(i.inventory_id)) AS stock
      	FROM film f, inventory i
      	WHERE f.film_id = i.film_id 
        	<if test="storeId != null">
            	AND i.store_id = #{storeId}
        	</if>
        	<if test="searchWord != null">
        		AND title LIKE CONCAT('%',#{searchWord},'%')
        	</if>
     	GROUP BY i.film_id, i.store_id
     	LIMIT #{beginRow}, #{rowPerPage}
   </select>
   
   <!-- 재고 목록 페이징을 위한 전체 데이터 개수 -->
   <select id="selectInventoryTotal" parameterType="map" resultType="int">
   		SELECT COUNT(DISTINCT(i.film_id)) AS totalInventory
      	FROM film f, inventory i
      	WHERE f.film_id = i.film_id 
        	<if test="storeId != null">
            	AND i.store_id = #{storeId}
        	</if>
        	<if test="searchWord != null">
        		AND title LIKE CONCAT('%',#{searchWord},'%')
        	</if>
   </select>
</mapper>