<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.CustomerMapper">
	<!-- 고객 상세보기 --> <!-- 고객 정보와 전체 rental 비용만 나오게 함, 대여리스트와 연체 강조는 아직 구현 안함 -->
	<select id="selectCustomerOne"
			parameterType="Integer"
			resultType="map">
	SELECT
		c.customer_id customerId,
		c.store_id storeId,
		c.first_name firstName,
		c.last_name lastName,
		c.email email,
		c.active active,
		SUM(p.amount) AS totalPayment
	FROM 
		customer AS c
	INNER JOIN payment AS p ON c.customer_id = p.customer_id
	WHERE c.customer_id = ${customerId}
	</select>
	
	<!-- 블랙리스트 고객 목록 -->
	<select id="selectBlackCustomerList"
			resultType="map">
		SELECT c.customer_id ID, CONCAT(c.first_name,' ', c.last_name) name, COUNT(*) overdue
		FROM customer c, rental r, inventory i, film f
		WHERE c.customer_id = r.customer_id
              AND r.inventory_id = i.inventory_id 
              AND i.film_id = f.film_id
              AND DATEDIFF(r.return_date, r.rental_date) > f.rental_duration
      	GROUP BY name
      	HAVING COUNT(*) > 20
	</select>
	
	<!-- 고객 목록 -->
	<select id="selectCustomerList"
			parameterType="java.util.Map"
			resultType="com.gd.sakila.vo.CustomerList">
		SELECT
			ID,
			name,
			address,
			`zip code` zipCode,
			phone,
			city,
			country,
			notes,
			SID
		FROM customer_list
		<where> <!-- 쿼리에서의 where 태그를 대신함 -->
			<if test="searchWord != null">
				name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY ID ASC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 고객 데이터 개수 세기 (페이징에 필요함) -->
	<select id="selectCustomerTotal" resultType="Integer" parameterType="String">
		SELECT COUNT(*) FROM customer_list
		<where>
			<if test="searchWord != null">
				name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<!-- 휴면 고객 처리 쿼리 -->
	<update id="updateCustomerActiveByScheduler">
		UPDATE customer
		SET active = 0
		WHERE customer_id IN (	SELECT customer_id
								FROM rental
								GROUP BY customer_id
								HAVING DATEDIFF(NOW(), MAX(rental_date)) > 365
							)
	</update>
</mapper>